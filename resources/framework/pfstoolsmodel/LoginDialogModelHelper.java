// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.framework.pfstoolsmodel;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>LoginDialogModel</b><br>
 * Generated     : <b>2013/09/09 3:58:12 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 build 7601 Service Pack 1 <br>
 * 
 * @since  September 09, 2013
 * @author zsadeque
 */
public abstract class LoginDialogModelHelper extends RationalTestScript
{
	/**
	 * _Cancel: with default state.
	 *		Name : btnCancel
	 * 		Text : &Cancel
	 * 		TabIndex : 6
	 * 		.class : System.Windows.Forms.Button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject _Cancelbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("_Cancelbutton"));
	}
	/**
	 * _Cancel: with specific test context and state.
	 *		Name : btnCancel
	 * 		Text : &Cancel
	 * 		TabIndex : 6
	 * 		.class : System.Windows.Forms.Button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject _Cancelbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("_Cancelbutton"), anchor, flags);
	}
	
	/**
	 * _OK: with default state.
	 *		Name : btnOK
	 * 		Text : &OK
	 * 		TabIndex : 5
	 * 		.class : System.Windows.Forms.Button
	 * 		.classIndex : 1
	 */
	protected GuiTestObject _OKbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("_OKbutton"));
	}
	/**
	 * _OK: with specific test context and state.
	 *		Name : btnOK
	 * 		Text : &OK
	 * 		TabIndex : 5
	 * 		.class : System.Windows.Forms.Button
	 * 		.classIndex : 1
	 */
	protected GuiTestObject _OKbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("_OKbutton"), anchor, flags);
	}
	
	/**
	 * txtPassword: with default state.
	 *		Name : txtPassword
	 * 		TabIndex : 2
	 * 		.class : System.Windows.Forms.TextBox
	 * 		.classIndex : 1
	 */
	protected TextGuiSubitemTestObject txtPasswordtext() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("txtPasswordtext"));
	}
	/**
	 * txtPassword: with specific test context and state.
	 *		Name : txtPassword
	 * 		TabIndex : 2
	 * 		.class : System.Windows.Forms.TextBox
	 * 		.classIndex : 1
	 */
	protected TextGuiSubitemTestObject txtPasswordtext(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("txtPasswordtext"), anchor, flags);
	}
	
	/**
	 * txtUserID: with default state.
	 *		Name : txtUserID
	 * 		TabIndex : 1
	 * 		.class : System.Windows.Forms.TextBox
	 * 		.classIndex : 2
	 */
	protected TextGuiSubitemTestObject txtUserIDtext() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("txtUserIDtext"));
	}
	/**
	 * txtUserID: with specific test context and state.
	 *		Name : txtUserID
	 * 		TabIndex : 1
	 * 		.class : System.Windows.Forms.TextBox
	 * 		.classIndex : 2
	 */
	protected TextGuiSubitemTestObject txtUserIDtext(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("txtUserIDtext"), anchor, flags);
	}
	
	/**
	 * ValidateIDPassword: with default state.
	 *		Name : chkValidate
	 * 		Text : Validate ID &&  Password
	 * 		TabIndex : 3
	 * 		.class : System.Windows.Forms.CheckBox
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject validateIDPasswordcheckBox() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("validateIDPasswordcheckBox"));
	}
	/**
	 * ValidateIDPassword: with specific test context and state.
	 *		Name : chkValidate
	 * 		Text : Validate ID &&  Password
	 * 		TabIndex : 3
	 * 		.class : System.Windows.Forms.CheckBox
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject validateIDPasswordcheckBox(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("validateIDPasswordcheckBox"), anchor, flags);
	}
	
	

	protected LoginDialogModelHelper()
	{
		setScriptName("framework.pfstoolsmodel.LoginDialogModel");
	}
	
}

