// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.scripts.endtoend;
import framework.AtlasScriptbase;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>TC01_DeliveryReqAndConf</b><br>
 * Generated     : <b>2013/05/23 11:38:15 AM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 build 7601 Service Pack 1 <br>
 * 
 * @since  May 23, 2013
 * @author zsadeque
 */
public abstract class TC01_DeliveryReqAndConfHelper extends framework.AtlasScriptbase
{
	/**
	 * DisplayDocumentFlow: with default state.
	 *		Name : btn[5]
	 * 		Id : /btn[5]
	 * 		.class : GuiButton
	 */
	protected SAPGuiToggleTestObject button_DocumentFlow() 
	{
		return new SAPGuiToggleTestObject(
                        getMappedTestObject("button_DocumentFlow"));
	}
	/**
	 * DisplayDocumentFlow: with specific test context and state.
	 *		Name : btn[5]
	 * 		Id : /btn[5]
	 * 		.class : GuiButton
	 */
	protected SAPGuiToggleTestObject button_DocumentFlow(TestObject anchor, long flags) 
	{
		return new SAPGuiToggleTestObject(
                        getMappedTestObject("button_DocumentFlow"), anchor, flags);
	}
	
	/**
	 * Back: with default state.
	 *		Name : btn[3]
	 * 		Id : /btn[3]
	 * 		.class : GuiButton
	 */
	protected SAPGuiToggleTestObject button_back() 
	{
		return new SAPGuiToggleTestObject(
                        getMappedTestObject("button_back"));
	}
	/**
	 * Back: with specific test context and state.
	 *		Name : btn[3]
	 * 		Id : /btn[3]
	 * 		.class : GuiButton
	 */
	protected SAPGuiToggleTestObject button_back(TestObject anchor, long flags) 
	{
		return new SAPGuiToggleTestObject(
                        getMappedTestObject("button_back"), anchor, flags);
	}
	
	/**
	 * Execute: with default state.
	 *		Name : btn[8]
	 * 		Id : /btn[8]
	 * 		.class : GuiButton
	 */
	protected SAPGuiToggleTestObject button_execute() 
	{
		return new SAPGuiToggleTestObject(
                        getMappedTestObject("button_execute"));
	}
	/**
	 * Execute: with specific test context and state.
	 *		Name : btn[8]
	 * 		Id : /btn[8]
	 * 		.class : GuiButton
	 */
	protected SAPGuiToggleTestObject button_execute(TestObject anchor, long flags) 
	{
		return new SAPGuiToggleTestObject(
                        getMappedTestObject("button_execute"), anchor, flags);
	}
	
	/**
	 * Find: with default state.
	 *		Name : SEARCH_BUTTON
	 * 		Id : /ssubCCONT_SUBSC01:SAPLZCCM1:0100/btnSEARCH_BUTTON
	 * 		.class : GuiButton
	 */
	protected SAPGuiToggleTestObject button_find() 
	{
		return new SAPGuiToggleTestObject(
                        getMappedTestObject("button_find"));
	}
	/**
	 * Find: with specific test context and state.
	 *		Name : SEARCH_BUTTON
	 * 		Id : /ssubCCONT_SUBSC01:SAPLZCCM1:0100/btnSEARCH_BUTTON
	 * 		.class : GuiButton
	 */
	protected SAPGuiToggleTestObject button_find(TestObject anchor, long flags) 
	{
		return new SAPGuiToggleTestObject(
                        getMappedTestObject("button_find"), anchor, flags);
	}
	
	/**
	 * Process: with default state.
	 *		Name : btn[8]
	 * 		Id : /btn[8]
	 * 		.class : GuiButton
	 */
	protected SAPGuiToggleTestObject button_process() 
	{
		return new SAPGuiToggleTestObject(
                        getMappedTestObject("button_process"));
	}
	/**
	 * Process: with specific test context and state.
	 *		Name : btn[8]
	 * 		Id : /btn[8]
	 * 		.class : GuiButton
	 */
	protected SAPGuiToggleTestObject button_process(TestObject anchor, long flags) 
	{
		return new SAPGuiToggleTestObject(
                        getMappedTestObject("button_process"), anchor, flags);
	}
	
	/**
	 * Save: with default state.
	 *		Name : btn[11]
	 * 		Id : /btn[11]
	 * 		.class : GuiButton
	 */
	protected SAPGuiToggleTestObject button_save() 
	{
		return new SAPGuiToggleTestObject(
                        getMappedTestObject("button_save"));
	}
	/**
	 * Save: with specific test context and state.
	 *		Name : btn[11]
	 * 		Id : /btn[11]
	 * 		.class : GuiButton
	 */
	protected SAPGuiToggleTestObject button_save(TestObject anchor, long flags) 
	{
		return new SAPGuiToggleTestObject(
                        getMappedTestObject("button_save"), anchor, flags);
	}
	
	/**
	 * okcd: with default state.
	 *		Name : okcd
	 * 		Id : /okcd
	 * 		.class : GuiOkCodeField
	 */
	protected SAPGuiTextTestObject comboBox_okcd() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("comboBox_okcd"));
	}
	/**
	 * okcd: with specific test context and state.
	 *		Name : okcd
	 * 		Id : /okcd
	 * 		.class : GuiOkCodeField
	 */
	protected SAPGuiTextTestObject comboBox_okcd(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("comboBox_okcd"), anchor, flags);
	}
	
	/**
	 * SAPGUIGridViewCtrl1: with default state.
	 *		Name : shell
	 * 		Id : /cntlCUST_100/shellcont/shell
	 * 		.class : GuiShell.GridView
	 */
	protected SAPGuiCtrlGridViewTestObject grid_sapguiGridViewCtrl1() 
	{
		return new SAPGuiCtrlGridViewTestObject(
                        getMappedTestObject("grid_sapguiGridViewCtrl1"));
	}
	/**
	 * SAPGUIGridViewCtrl1: with specific test context and state.
	 *		Name : shell
	 * 		Id : /cntlCUST_100/shellcont/shell
	 * 		.class : GuiShell.GridView
	 */
	protected SAPGuiCtrlGridViewTestObject grid_sapguiGridViewCtrl1(TestObject anchor, long flags) 
	{
		return new SAPGuiCtrlGridViewTestObject(
                        getMappedTestObject("grid_sapguiGridViewCtrl1"), anchor, flags);
	}
	
	/**
	 * _052013: with default state.
	 *		Text : RegularExpression([0-1][1-9]/[0-3][0-9]/[1][2-9])
	 * 		Id : /lbl[47,9]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Date_02() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Date_02"));
	}
	/**
	 * _052013: with specific test context and state.
	 *		Text : RegularExpression([0-1][1-9]/[0-3][0-9]/[1][2-9])
	 * 		Id : /lbl[47,9]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Date_02(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Date_02"), anchor, flags);
	}
	
	/**
	 * GuiLabel: with default state.
	 *		Text : 
	 * 		Id : /lbl[106,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Description_01() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Description_01"));
	}
	/**
	 * GuiLabel: with specific test context and state.
	 *		Text : 
	 * 		Id : /lbl[106,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Description_01(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Description_01"), anchor, flags);
	}
	
	/**
	 * Completed: with default state.
	 *		Text : Completed
	 * 		Id : /lbl[86,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Description_02() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Description_02"));
	}
	/**
	 * Completed: with specific test context and state.
	 *		Text : Completed
	 * 		Id : /lbl[86,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Description_02(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Description_02"), anchor, flags);
	}
	
	/**
	 * DeviceOrderConsmr11473966131: with default state.
	 *		Text : RegularExpression(Device Order Consmr .* / 1)
	 * 		Id : /lbl[1,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Doc_01() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Doc_01"));
	}
	/**
	 * DeviceOrderConsmr11473966131: with specific test context and state.
	 *		Text : RegularExpression(Device Order Consmr .* / 1)
	 * 		Id : /lbl[1,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Doc_01(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Doc_01"), anchor, flags);
	}
	
	/**
	 * _OutbDelDevice3PL81029259251: with default state.
	 *		Text : RegularExpression(\. Outb Del Device 3PL .* / 1)
	 * 		Id : /lbl[1,9]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Doc_02() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Doc_02"));
	}
	/**
	 * _OutbDelDevice3PL81029259251: with specific test context and state.
	 *		Text : RegularExpression(\. Outb Del Device 3PL .* / 1)
	 * 		Id : /lbl[1,9]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Doc_02(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Doc_02"), anchor, flags);
	}
	
	/**
	 * _2000: with default state.
	 *		Text :              2.000
	 * 		Id : /lbl[58,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Qty_01() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Qty_01"));
	}
	/**
	 * _2000: with specific test context and state.
	 *		Text :              2.000
	 * 		Id : /lbl[58,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Qty_01(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Qty_01"), anchor, flags);
	}
	
	/**
	 * _1000: with default state.
	 *		Text :              1.000
	 * 		Id : /lbl[58,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Qty_02() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Qty_02"));
	}
	/**
	 * _1000: with specific test context and state.
	 *		Text :              1.000
	 * 		Id : /lbl[58,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Qty_02(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Qty_02"), anchor, flags);
	}
	
	/**
	 * Open: with default state.
	 *		Text : Open
	 * 		Id : /lbl[86,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Status_01() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Status_01"));
	}
	/**
	 * Open: with specific test context and state.
	 *		Text : Open
	 * 		Id : /lbl[86,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Status_01(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Status_01"), anchor, flags);
	}
	
	/**
	 * EA: with default state.
	 *		Text : EA
	 * 		Id : /lbl[78,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Uom_01() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Uom_01"));
	}
	/**
	 * EA: with specific test context and state.
	 *		Text : EA
	 * 		Id : /lbl[78,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Uom_01(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Uom_01"), anchor, flags);
	}
	
	/**
	 * EA: with default state.
	 *		Text : EA
	 * 		Id : /lbl[78,9]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Uom_02() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Uom_02"));
	}
	/**
	 * EA: with specific test context and state.
	 *		Text : EA
	 * 		Id : /lbl[78,9]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label_Uom_02(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label_Uom_02"), anchor, flags);
	}
	
	/**
	 * _052013: with default state.
	 *		Text : RegularExpression([0-1][1-9]/[0-3][0-9]/[1][2-9])
	 * 		Id : /lbl[47,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label__Date_01() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label__Date_01"));
	}
	/**
	 * _052013: with specific test context and state.
	 *		Text : RegularExpression([0-1][1-9]/[0-3][0-9]/[1][2-9])
	 * 		Id : /lbl[47,8]
	 * 		.class : GuiLabel
	 * 		Tooltip : 
	 */
	protected SAPGuiTextTestObject label__Date_01(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("label__Date_01"), anchor, flags);
	}
	
	/**
	 * mbar: with default state.
	 *		Name : mbar
	 * 		Id : /mbar
	 * 		.class : GuiMenubar
	 */
	protected SAPGuiMenubarTestObject menuBar_mbar() 
	{
		return new SAPGuiMenubarTestObject(
                        getMappedTestObject("menuBar_mbar"));
	}
	/**
	 * mbar: with specific test context and state.
	 *		Name : mbar
	 * 		Id : /mbar
	 * 		.class : GuiMenubar
	 */
	protected SAPGuiMenubarTestObject menuBar_mbar(TestObject anchor, long flags) 
	{
		return new SAPGuiMenubarTestObject(
                        getMappedTestObject("menuBar_mbar"), anchor, flags);
	}
	
	/**
	 * RunningApplications: with default state.
	 *		.class : .Toolbar
	 * 		.name : Running applications
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject runningApplicationstoolBar() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("runningApplicationstoolBar"));
	}
	/**
	 * RunningApplications: with specific test context and state.
	 *		.class : .Toolbar
	 * 		.name : Running applications
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject runningApplicationstoolBar(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("runningApplicationstoolBar"), anchor, flags);
	}
	
	/**
	 * OutbDelDevice3PL8102924728HasBeenSaved: with default state.
	 *		Name : sbar
	 * 		Id : /sbar
	 * 		.class : GuiStatusbar
	 */
	protected SAPGuiStatusbarTestObject statusBar_01() 
	{
		return new SAPGuiStatusbarTestObject(
                        getMappedTestObject("statusBar_01"));
	}
	/**
	 * OutbDelDevice3PL8102924728HasBeenSaved: with specific test context and state.
	 *		Name : sbar
	 * 		Id : /sbar
	 * 		.class : GuiStatusbar
	 */
	protected SAPGuiStatusbarTestObject statusBar_01(TestObject anchor, long flags) 
	{
		return new SAPGuiStatusbarTestObject(
                        getMappedTestObject("statusBar_01"), anchor, flags);
	}
	
	/**
	 * RSYSTBCODE: with default state.
	 *		Name : RSYST-BCODE
	 * 		Id : /pwdRSYST-BCODE
	 * 		.class : GuiPasswordField
	 * 		.priorLabel : Password
	 */
	protected SAPGuiTextTestObject text_password() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_password"));
	}
	/**
	 * RSYSTBCODE: with specific test context and state.
	 *		Name : RSYST-BCODE
	 * 		Id : /pwdRSYST-BCODE
	 * 		.class : GuiPasswordField
	 * 		.priorLabel : Password
	 */
	protected SAPGuiTextTestObject text_password(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_password"), anchor, flags);
	}
	
	/**
	 * SX_CRETIHIGH: with default state.
	 *		Name : SX_CRETI-HIGH
	 * 		Id : /ctxtSX_CRETI-HIGH
	 * 		.class : GuiCTextField
	 */
	protected SAPGuiTextTestObject text_sX_CRETIHIGH() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_sX_CRETIHIGH"));
	}
	/**
	 * SX_CRETIHIGH: with specific test context and state.
	 *		Name : SX_CRETI-HIGH
	 * 		Id : /ctxtSX_CRETI-HIGH
	 * 		.class : GuiCTextField
	 */
	protected SAPGuiTextTestObject text_sX_CRETIHIGH(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_sX_CRETIHIGH"), anchor, flags);
	}
	
	/**
	 * SX_CRETILOW: with default state.
	 *		Name : SX_CRETI-LOW
	 * 		Id : /ctxtSX_CRETI-LOW
	 * 		.class : GuiCTextField
	 */
	protected SAPGuiTextTestObject text_sX_CRETILOW() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_sX_CRETILOW"));
	}
	/**
	 * SX_CRETILOW: with specific test context and state.
	 *		Name : SX_CRETI-LOW
	 * 		Id : /ctxtSX_CRETI-LOW
	 * 		.class : GuiCTextField
	 */
	protected SAPGuiTextTestObject text_sX_CRETILOW(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_sX_CRETILOW"), anchor, flags);
	}
	
	/**
	 * SX_STATULOW: with default state.
	 *		Name : SX_STATU-LOW
	 * 		Id : /ctxtSX_STATU-LOW
	 * 		.class : GuiCTextField
	 */
	protected SAPGuiTextTestObject text_sX_STATULOW() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_sX_STATULOW"));
	}
	/**
	 * SX_STATULOW: with specific test context and state.
	 *		Name : SX_STATU-LOW
	 * 		Id : /ctxtSX_STATU-LOW
	 * 		.class : GuiCTextField
	 */
	protected SAPGuiTextTestObject text_sX_STATULOW(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_sX_STATULOW"), anchor, flags);
	}
	
	/**
	 * SX_UPDTIHIGH: with default state.
	 *		Name : SX_UPDTI-HIGH
	 * 		Id : /ctxtSX_UPDTI-HIGH
	 * 		.class : GuiCTextField
	 */
	protected SAPGuiTextTestObject text_sX_UPDTIHIGH() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_sX_UPDTIHIGH"));
	}
	/**
	 * SX_UPDTIHIGH: with specific test context and state.
	 *		Name : SX_UPDTI-HIGH
	 * 		Id : /ctxtSX_UPDTI-HIGH
	 * 		.class : GuiCTextField
	 */
	protected SAPGuiTextTestObject text_sX_UPDTIHIGH(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_sX_UPDTIHIGH"), anchor, flags);
	}
	
	/**
	 * SX_UPDTILOW: with default state.
	 *		Name : SX_UPDTI-LOW
	 * 		Id : /ctxtSX_UPDTI-LOW
	 * 		.class : GuiCTextField
	 */
	protected SAPGuiTextTestObject text_sX_UPDTILOW() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_sX_UPDTILOW"));
	}
	/**
	 * SX_UPDTILOW: with specific test context and state.
	 *		Name : SX_UPDTI-LOW
	 * 		Id : /ctxtSX_UPDTI-LOW
	 * 		.class : GuiCTextField
	 */
	protected SAPGuiTextTestObject text_sX_UPDTILOW(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_sX_UPDTILOW"), anchor, flags);
	}
	
	/**
	 * RSYSTBNAME: with default state.
	 *		Name : RSYST-BNAME
	 * 		Id : /txtRSYST-BNAME
	 * 		.class : GuiTextField
	 * 		.priorLabel : User
	 */
	protected SAPGuiTextTestObject text_username() 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_username"));
	}
	/**
	 * RSYSTBNAME: with specific test context and state.
	 *		Name : RSYST-BNAME
	 * 		Id : /txtRSYST-BNAME
	 * 		.class : GuiTextField
	 * 		.priorLabel : User
	 */
	protected SAPGuiTextTestObject text_username(TestObject anchor, long flags) 
	{
		return new SAPGuiTextTestObject(
                        getMappedTestObject("text_username"), anchor, flags);
	}
	
	/**
	 * SAPTableTreeControl1: with default state.
	 *		Name : shell
	 * 		Id : /cntlTREE_CONTAINER/shellcont/shell
	 * 		.class : GuiShell.Tree
	 */
	protected SAPGuiCtrlTreeTestObject tree_sapTableTreeControl1() 
	{
		return new SAPGuiCtrlTreeTestObject(
                        getMappedTestObject("tree_sapTableTreeControl1"));
	}
	/**
	 * SAPTableTreeControl1: with specific test context and state.
	 *		Name : shell
	 * 		Id : /cntlTREE_CONTAINER/shellcont/shell
	 * 		.class : GuiShell.Tree
	 */
	protected SAPGuiCtrlTreeTestObject tree_sapTableTreeControl1(TestObject anchor, long flags) 
	{
		return new SAPGuiCtrlTreeTestObject(
                        getMappedTestObject("tree_sapTableTreeControl1"), anchor, flags);
	}
	
	/**
	 * DocumentFlow: with default state.
	 *		Name : wnd[0]
	 * 		Text : Document Flow
	 * 		.connectionNumber : 0
	 * 		Id : /wnd[0]
	 * 		.class : GuiMainWindow
	 * 		.sessionNumber : 0
	 * 		.processName : saplogon.exe
	 */
	protected SAPTopLevelTestObject window_documentFlow() 
	{
		return new SAPTopLevelTestObject(
                        getMappedTestObject("window_documentFlow"));
	}
	/**
	 * DocumentFlow: with specific test context and state.
	 *		Name : wnd[0]
	 * 		Text : Document Flow
	 * 		.connectionNumber : 0
	 * 		Id : /wnd[0]
	 * 		.class : GuiMainWindow
	 * 		.sessionNumber : 0
	 * 		.processName : saplogon.exe
	 */
	protected SAPTopLevelTestObject window_documentFlow(TestObject anchor, long flags) 
	{
		return new SAPTopLevelTestObject(
                        getMappedTestObject("window_documentFlow"), anchor, flags);
	}
	
	/**
	 * SAP: with default state.
	 *		Name : wnd[0]
	 * 		.connectionNumber : 0
	 * 		Text : SAP
	 * 		Id : /wnd[0]
	 * 		.class : GuiMainWindow
	 * 		.sessionNumber : 0
	 * 		.processName : saplogon.exe
	 */
	protected SAPTopLevelTestObject window_sap() 
	{
		return new SAPTopLevelTestObject(
                        getMappedTestObject("window_sap"));
	}
	/**
	 * SAP: with specific test context and state.
	 *		Name : wnd[0]
	 * 		.connectionNumber : 0
	 * 		Text : SAP
	 * 		Id : /wnd[0]
	 * 		.class : GuiMainWindow
	 * 		.sessionNumber : 0
	 * 		.processName : saplogon.exe
	 */
	protected SAPTopLevelTestObject window_sap(TestObject anchor, long flags) 
	{
		return new SAPTopLevelTestObject(
                        getMappedTestObject("window_sap"), anchor, flags);
	}
	
	/**
	 * SAPEasyAccessSAPRetail: with default state.
	 *		Name : wnd[0]
	 * 		Text : SAP Easy Access  SAP Retail
	 * 		.connectionNumber : 0
	 * 		Id : /wnd[0]
	 * 		.class : GuiMainWindow
	 * 		.sessionNumber : 0
	 * 		.processName : saplogon.exe
	 */
	protected SAPTopLevelTestObject window_sapEasyAccessSAPRetail() 
	{
		return new SAPTopLevelTestObject(
                        getMappedTestObject("window_sapEasyAccessSAPRetail"));
	}
	/**
	 * SAPEasyAccessSAPRetail: with specific test context and state.
	 *		Name : wnd[0]
	 * 		Text : SAP Easy Access  SAP Retail
	 * 		.connectionNumber : 0
	 * 		Id : /wnd[0]
	 * 		.class : GuiMainWindow
	 * 		.sessionNumber : 0
	 * 		.processName : saplogon.exe
	 */
	protected SAPTopLevelTestObject window_sapEasyAccessSAPRetail(TestObject anchor, long flags) 
	{
		return new SAPTopLevelTestObject(
                        getMappedTestObject("window_sapEasyAccessSAPRetail"), anchor, flags);
	}
	
	/**
	 * StatusMonitorForALEMessages: with default state.
	 *		Name : wnd[0]
	 * 		.connectionNumber : 0
	 * 		Text : Status Monitor for ALE Messages
	 * 		Id : /wnd[0]
	 * 		.class : GuiMainWindow
	 * 		.sessionNumber : 0
	 * 		.processName : saplogon.exe
	 */
	protected SAPTopLevelTestObject window_statusMonitorForALEMess() 
	{
		return new SAPTopLevelTestObject(
                        getMappedTestObject("window_statusMonitorForALEMess"));
	}
	/**
	 * StatusMonitorForALEMessages: with specific test context and state.
	 *		Name : wnd[0]
	 * 		.connectionNumber : 0
	 * 		Text : Status Monitor for ALE Messages
	 * 		Id : /wnd[0]
	 * 		.class : GuiMainWindow
	 * 		.sessionNumber : 0
	 * 		.processName : saplogon.exe
	 */
	protected SAPTopLevelTestObject window_statusMonitorForALEMess(TestObject anchor, long flags) 
	{
		return new SAPTopLevelTestObject(
                        getMappedTestObject("window_statusMonitorForALEMess"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point Date object in the SUT.
	 */
	protected IFtVerificationPoint DateVP() 
	{
		return vp("Date");
	}
	protected IFtVerificationPoint DateVP(TestObject anchor)
	{
		return vp("Date", anchor);
	}
	
	/**
	 * Locate and return the verification point DeliveryConfirmation object in the SUT.
	 */
	protected IFtVerificationPoint DeliveryConfirmationVP() 
	{
		return vp("DeliveryConfirmation");
	}
	protected IFtVerificationPoint DeliveryConfirmationVP(TestObject anchor)
	{
		return vp("DeliveryConfirmation", anchor);
	}
	
	/**
	 * Locate and return the verification point DeliveryCreated object in the SUT.
	 */
	protected IFtVerificationPoint DeliveryCreatedVP() 
	{
		return vp("DeliveryCreated");
	}
	protected IFtVerificationPoint DeliveryCreatedVP(TestObject anchor)
	{
		return vp("DeliveryCreated", anchor);
	}
	
	/**
	 * Locate and return the verification point Description object in the SUT.
	 */
	protected IFtVerificationPoint DescriptionVP() 
	{
		return vp("Description");
	}
	protected IFtVerificationPoint DescriptionVP(TestObject anchor)
	{
		return vp("Description", anchor);
	}
	
	/**
	 * Locate and return the verification point DocName object in the SUT.
	 */
	protected IFtVerificationPoint DocNameVP() 
	{
		return vp("DocName");
	}
	protected IFtVerificationPoint DocNameVP(TestObject anchor)
	{
		return vp("DocName", anchor);
	}
	
	/**
	 * Locate and return the verification point label_Date_02 object in the SUT.
	 */
	protected IFtVerificationPoint label_Date_02VP() 
	{
		return vp("label_Date_02");
	}
	protected IFtVerificationPoint label_Date_02VP(TestObject anchor)
	{
		return vp("label_Date_02", anchor);
	}
	
	/**
	 * Locate and return the verification point label_Description_02 object in the SUT.
	 */
	protected IFtVerificationPoint label_Description_02VP() 
	{
		return vp("label_Description_02");
	}
	protected IFtVerificationPoint label_Description_02VP(TestObject anchor)
	{
		return vp("label_Description_02", anchor);
	}
	
	/**
	 * Locate and return the verification point label_Doc_02 object in the SUT.
	 */
	protected IFtVerificationPoint label_Doc_02VP() 
	{
		return vp("label_Doc_02");
	}
	protected IFtVerificationPoint label_Doc_02VP(TestObject anchor)
	{
		return vp("label_Doc_02", anchor);
	}
	
	/**
	 * Locate and return the verification point label_Qty_02 object in the SUT.
	 */
	protected IFtVerificationPoint label_Qty_02VP() 
	{
		return vp("label_Qty_02");
	}
	protected IFtVerificationPoint label_Qty_02VP(TestObject anchor)
	{
		return vp("label_Qty_02", anchor);
	}
	
	/**
	 * Locate and return the verification point label_Uom object in the SUT.
	 */
	protected IFtVerificationPoint label_UomVP() 
	{
		return vp("label_Uom");
	}
	protected IFtVerificationPoint label_UomVP(TestObject anchor)
	{
		return vp("label_Uom", anchor);
	}
	
	/**
	 * Locate and return the verification point OpenOrder object in the SUT.
	 */
	protected IFtVerificationPoint OpenOrderVP() 
	{
		return vp("OpenOrder");
	}
	protected IFtVerificationPoint OpenOrderVP(TestObject anchor)
	{
		return vp("OpenOrder", anchor);
	}
	
	/**
	 * Locate and return the verification point Qunatity object in the SUT.
	 */
	protected IFtVerificationPoint QunatityVP() 
	{
		return vp("Qunatity");
	}
	protected IFtVerificationPoint QunatityVP(TestObject anchor)
	{
		return vp("Qunatity", anchor);
	}
	
	/**
	 * Locate and return the verification point SAPGUIGridViewCtrl1_list object in the SUT.
	 */
	protected IFtVerificationPoint SAPGUIGridViewCtrl1_listVP() 
	{
		return vp("SAPGUIGridViewCtrl1_list");
	}
	protected IFtVerificationPoint SAPGUIGridViewCtrl1_listVP(TestObject anchor)
	{
		return vp("SAPGUIGridViewCtrl1_list", anchor);
	}
	
	/**
	 * Locate and return the verification point Status object in the SUT.
	 */
	protected IFtVerificationPoint StatusVP() 
	{
		return vp("Status");
	}
	protected IFtVerificationPoint StatusVP(TestObject anchor)
	{
		return vp("Status", anchor);
	}
	
	/**
	 * Locate and return the verification point StatusBar object in the SUT.
	 */
	protected IFtVerificationPoint StatusBarVP() 
	{
		return vp("StatusBar");
	}
	protected IFtVerificationPoint StatusBarVP(TestObject anchor)
	{
		return vp("StatusBar", anchor);
	}
	
	/**
	 * Locate and return the verification point StatusBar_01 object in the SUT.
	 */
	protected IFtVerificationPoint StatusBar_01VP() 
	{
		return vp("StatusBar_01");
	}
	protected IFtVerificationPoint StatusBar_01VP(TestObject anchor)
	{
		return vp("StatusBar_01", anchor);
	}
	
	/**
	 * Locate and return the verification point UoM object in the SUT.
	 */
	protected IFtVerificationPoint UoMVP() 
	{
		return vp("UoM");
	}
	protected IFtVerificationPoint UoMVP(TestObject anchor)
	{
		return vp("UoM", anchor);
	}
	
	

	protected TC01_DeliveryReqAndConfHelper()
	{
		setScriptName("scripts.endtoend.TC01_DeliveryReqAndConf");
	}
	
}

